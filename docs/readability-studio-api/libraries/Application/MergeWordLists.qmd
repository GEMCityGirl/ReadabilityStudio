{{< pagebreak >}}
## `MergeWordLists`

Merges multiple word lists\index{word lists!merging} into a new file.

All white space characters (i.e., space, tabs, newlines) are used as delimiters when extracting words from the files.

To preserve phrases (i.e., words separated by spaces), use [`MergePhraseLists()`](#mergephraselists) instead.

### Syntax {-}

``` {.lua}
boolean MergeWordLists(string input1,
                       ...,
                       string outputFilePath)
```

### Return value {-}

Type: `boolean`

Returns `true` if files were successfully merged.

### Parameters {-}

**Parameter** | **Description**
| :-- | :-- |
| `string` inputFile1 | The first input file. |
| ... | Any additional files to merge with `inputFile1`. |
| `string` outputFile | Where to save the combined list of words. | 

### Example\index{examples!merging word lists} {-}

``` {.lua}
Application.MergeWordLists(
    Application.GetUserFolder(UserPath.Documents) .. "programming/assembly.txt",
    Application.GetUserFolder(UserPath.Documents) .. "programming/cpp.txt",
    Application.GetUserFolder(UserPath.Documents) .. "programming/html.txt",
    Application.GetUserFolder(UserPath.Documents) .. "programming/sql.txt",
    Application.GetUserFolder(UserPath.Documents) .. "programming/r.txt",
    -- all proceeding files will be combined into "all-languages.txt"
    Application.GetUserFolder(UserPath.Documents) .. "programming/all-languages.txt")
```

::: {.notesection data-latex=""}
The output file will also be sorted and have any duplicate entries removed.
:::

### See also {-}

[`MergePhraseLists()`](#mergephraselists), [`CrossReferencePhraseLists()`](#crossreferencephraselists)
