```{r}
#| include: false
#| eval: true

source('../R/appdown.r')
```

# Program Overview

## What Readability Studio Offers {#sec-program-offering}

*Readability Studio* eases the task of performing these tests.
The program quickly imports and analyzes your work using the most popular tests.
In addition, it offers insightful explanations and suggestions for improving your documents.

### Readability Studio's Unique Features {-}

#### Numerous insightful tests {-}

*Readability Studio* offers many popular readability tests, along with in-depth explanations.
Each test result includes an explanation of the score and the factors that affect it.

The program also provides many useful features to help review the difficult aspects of your document.
This includes lists of various difficult words and views of the document with difficult words and sentences highlighted.
These tools can assist you in improving your documents so that they meet their target readers.

Another important feature is that the program analyzes the entire content of your document (rather than samples).
This will give you the most accurate results possible.

Finally, *Readability Studio* offers multiple-document analysis.
The program can analyze hundreds (or even thousands) of documents at once and aggregate their results.
This includes all readability scores, difficult word and sentence statistics, and grammar issues.
You can also drill down into a specific document to review it in deeper detail.

The following tests are available:

```{r, echo=F}
maxTestRows <- 15
englishTests <- split_column_into_table(read_tsv("../data/EnglishTests.txt",
                                        col_names=F)[[1]] %>% sort(),
                                        maxTestRows)

kableExtra::kbl(englishTests, booktabs=T, centering=T, linesep="",
                caption="English Tests", align='l', escape=F) %>%
  kableExtra::kable_classic(full_width=F) %>%
  kableExtra::kable_styling(latex_options=c("scale_down")) %>%
  kableExtra::column_spec(1, border_right = ncol(englishTests) > 1) %>%
  kableExtra::column_spec(2, border_right = ncol(englishTests) > 1)

# other languages
germanTests <- read_tsv("../data/GermanTests.txt", col_names=F)[[1]] %>% sort()
spanishTests <- read_tsv("../data/SpanishTests.txt", col_names=F)[[1]] %>% sort()
```

```{r, echo=F, eval=knitr::is_html_output()}
spanishTests <- split_column_into_table(spanishTests, maxTestRows)

kableExtra::kbl(spanishTests, booktabs=T, centering=T, linesep="",
                caption="Spanish Tests", align='l', escape=F) %>%
  kableExtra::kable_classic(full_width=F) %>%
  kableExtra::column_spec(1, border_right = ncol(spanishTests) > 1) %>%
  kableExtra::kable_styling(position = "float_left")
```

```{r, echo=F, eval=knitr::is_html_output()}
germanTests <- split_column_into_table(germanTests, maxTestRows)

kableExtra::kbl(germanTests, booktabs=T, centering=T, linesep="",
                caption="German Tests", align='l', escape=F) %>%
  kableExtra::kable_classic(full_width=F) %>%
  kableExtra::column_spec(1, border_right = ncol(germanTests) > 1) %>%
  kableExtra::kable_styling(position = "left")
```

```{r, echo=F, eval=knitr::is_latex_output()}
if (length(germanTests) > length(spanishTests))
  { length(spanishTests) <- length(germanTests) }
if (length(spanishTests) > length(germanTests))
  { length(germanTests) <- length(spanishTests) }

spanishTests <- split_column_into_table(spanishTests, maxTestRows)
germanTests <- split_column_into_table(germanTests, maxTestRows)

sKable <- kableExtra::kbl(spanishTests, booktabs=T, centering=T, linesep="",
                align='l', valign='t', escape=F) %>%
  kableExtra::column_spec(1, border_right = ncol(spanishTests) > 1)

gKAble <- kableExtra::kbl(germanTests, booktabs=T, centering=T, linesep="",
                align='l', valign='t', escape=F) %>%
  kableExtra::column_spec(1, border_right = ncol(germanTests) > 1)

knitr::asis_output(glue_collapse(
  c(R"(\begin{table}[!htb]
\begin{minipage}{.5\linewidth}
\captionof{table}{Spanish Tests})",
    sKable,
    R"(\hspace{1cm}
\end{minipage}%
\hspace{.1cm}
\begin{minipage}{.5\linewidth}
\captionof{table}{German Tests})",
    gKAble,
    R"(\end{minipage}
\end{table})")))
```

#### Helpful assistance for test selection {-}

*Readability Studio* presents an intuitive interface for selecting readability tests.
Experts can manually select the tests that they want to perform, while those less familiar with these tests can be guided through a helpful [wizard](#sec-creating-standard-project). This wizard can recommend which tests to include based on the document's type (e.g., text book) or industry (e.g., health care).

#### Graphics {-}

*Readability Studio* includes numerous graphs to help visualize your results.
Graphical tests such as Fry and Raygor are included, as well as a bar chart showing a breakdown of the difficult word categories.
If you are reviewing Dolch Sight Words, then breakdown charts of your category usage and coverage are also included.

Multiple-document graphs are also available.
Here, [histograms](#sec-reviewing-batch-histograms) and [box plots](#sec-reviewing-batch-box-plots) show the distribution of a document collection's test scores.
This is useful for summarizing the general reading level of a batch of documents. It is also useful for finding problematic documents in a batch (i.e., outliers).

#### Detailed statistics {-}

Numerous sentence and word statistics are provided.
This includes a full difficult-words breakdown and word & sentence-length averages.
The type of statistics included is also [customizable](#sec-options-statistics).

#### Lists of difficult words and sentences {-}

Lists of difficult words and sentences are broken down by category and can easily be searched, sorted, printed, and exported. A separate list for each type of difficult word (e.g., 3+ syllables) is included, as well as a list of overly-long sentences. These lists provide detailed information about each difficult word, such as its syllable count and frequency. This enables you to search for either the most difficult words or the difficult words that occur most frequently.

These lists are also interactive. You can double-click on a word (or sentence) in a list, and the program will switch to the document display with the first occurrence of that word selected. This is useful for quickly finding a difficult word or sentence in its original context.

#### Document highlighting {-}

Difficult words and sentences are also shown highlighted in their original context. This is useful in finding trouble spots in your document.

#### Grammar tools {-}

Along with readability analysis, *Readability Studio* also offers basic grammar checking. The program can detect the following problems:

- [wording errors and known misspellings (English only)](#sec-reviewing-standard-grammar)
- [possible misspellings (English only)](#sec-reviewing-standard-grammar)
- [repeated words](#sec-reviewing-standard-grammar)
- [article mismatching (English only)](#sec-reviewing-standard-grammar)
- [redundant phrases (English only)](#sec-reviewing-standard-grammar)
- [wordy items (English only)](#sec-reviewing-standard-grammar)
- [clichés (English only)](#sec-reviewing-standard-grammar)
- [overly-long sentences](#sec-reviewing-sentences-breakdown)
- [lowercased sentences](#sec-reviewing-standard-grammar)
- [sentences that begin with conjunctions](#sec-reviewing-standard-grammar)
- [passive voice (English only)](#sec-reviewing-standard-grammar)

These issues are shown highlighted in your document for easy review.
They are also aggregated into sortable lists to give a general overview of any problems and to assist in finding specific issues.

#### Dolch Sight Words {-}

*Readability Studio* also includes a [Dolch](#sec-reviewing-dolch) suite of statistics and graphs, which is useful for educators and writers who work with young readers.
The program provides a complete breakdown of Dolch words that you are using (and not using) in your content.
This enables writers to see how they can improve their Dolch practice materials.
This also enables educators to determine which materials are appropriate for Dolch practice.

#### Numerous file formats supported {-}

*Readability Studio* supports importing text from many file formats, including:

- ANSI and Unicode text (\*.txt)
- *Microsoft^®^ Word* 97–2003 (\*.doc)
- *Microsoft^®^ Word* 2007 (\*.docx)
- *Microsoft^®^ PowerPoint* 2007 (\*.pptx)
- *Microsoft^®^ Excel* 2007 (cells can be batch analyzed as documents or filepaths to other documents)
- *OpenDocument* Text (\*.odt)
- *OpenDocument* Presentation (\*.odp)
- HTML (\*.htm)
- Markdown (\*.md, \*.Rmd, \*.qmd)
- Rich text (\*.rtf)
- Postscript (\*.ps)
- ZIP (documents within can be batch analyzed)
- Interface Definition Language (\*.idl)
- (Doxygen style) C^++^ source (\*.cpp and \*.h)

You do not need the native application for these file formats. *Readability Studio* is capable of importing these files without any additional programs.

#### Exporting capabilities {-}

*Readability Studio* provides printing and [exporting](#sec-exporting) capabilities for all test scores, word lists, statistics, graphs, etc.
This enables you to easily share and publish your results.

- Test results, statistics, and difficult word lists can all be exported as HTML, text, or {{< latex >}}.
- Statistics summary report can be exported as HTML.
- Highlighted document views can be exported as RTF or HTML.
- Graphs can be exported as TIFF, JPG, BMP, PNG, SVG, GIF, or TARGA.

#### Flexibility {-}

Finally, *Readability Studio* is highly configurable.
Many options, such as how documents are analyzed and how the results are displayed, are customizable.
For example, you can specify how numeric words (e.g., *10/31/1974*) are [syllabized](#sec-document-analysis).
Other programs either sound out each digit or treat the entire word as one syllable and you cannot change this.
With *Readability Studio*, you can toggle this behavior at anytime.
