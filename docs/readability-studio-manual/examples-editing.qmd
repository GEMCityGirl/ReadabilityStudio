```{r}
#| include: false
#| eval: true

source('R/appdown.r')
```

# Editing

## Editing within Readability Studio {-#sec-rs-as-an-editor}

In this example, we will write and edit a document from within *Readability Studio* itself\index{editing!from \textit{Readability Studio}|(}. Click the `r keys("New")` button on the **Home** tab to open the **New Project** wizard.
Next, select the **Manually enter text** option.

![](images/wizardentertext.png)

You can either type or paste text into this text box. In this example, we will leave it blank and edit it later.
For brevity, we will use the defaults for document structure and test selections. (These can always be changed later from the **Document** and **Readability** tabs on the ribbon.)
Click the `r keys("Finish")` button to create the project.

Because the project does not have any content yet, only empty scores and statistics will be shown.
To add content, select the **Document** tab on the ribbon and click the `r keys("Edit Document")` button. This will show the **Edit Embedded Document** dialog, where we will write our document.

![](images/editorwithcontent.png)

Along the ribbon of this dialog are various editing features, such as find &amp; replace, clipboard operations, and undo/redo.

![](images/editorclipboardandeditribbon.png)

In the **View** section of the ribbon are options for changing the appearance of the editor.

![](images/editorviewribbon.png)

For example, we can toggle line spacing between new lines by selecting `r menu(c("Line Spacing", "Display space after hard returns"))`.

As you edit the document, you can click the **Save** button on the editor:

![](images/editorsaveribbon.png)

at any time to send your edits back to the project.
The project will then analyze your changes and reload its results.

::: {.minipage data-latex="{\textwidth}"}
By placing the project window and editor side-by-side, you can review any issues while you edit.

:::: {layout-ncol=2}
![](images/termchecklistgrammar.png)

![](images/editorwithcontent.png)
::::
:::

As you edit, you can also change the parsing options or add tests.
With the project window selected, select the **Readability** tab on the ribbon and click `r menu(c("Secondary", "Flesch Reading Ease"))`.
A Flesch test will now be available and can be viewed by selecting **Readability Scores** on the sidebar.
Likewise, various parsing features (e.g., line-end handling, text exclusion) can be changed on the **Document** tab on the ribbon.

You can also search for issues in the editor by double clicking on items in the project's lists.
Click **Words Breakdown** on the sidebar and select any list in this section (e.g., **3+ Syllable List**).
Double click any word in this list and it will become selected in the editor. (Clicking `r keys("F3")` on the keyboard will search for the next instance.)

::: {.notesection data-latex=""}
If the editor is not open, then double clicking a list item will search for it in the respective text window within the project.
:::

Once you are finished editing and ready to export your document, copy it and paste it into another program.
For example, click `r keys("Select All")` and `r keys("Copy")`, then paste into a program such as *Microsoft Word*, *Outlook*, *Pages*, *LibreOffice*, etc.

In the next example (see \@ref(sec-external-editing)), we will edit our document from another program and view the changes in *Readability Studio* in real-time.\index{editing!from \textit{Readability Studio}|)}

\newpage

## Editing from Other Programs {-#sec-external-editing}

Continuing\index{editing!from other programs|(} from the previous example (see \@ref(sec-rs-as-an-editor)), we have copied the text from the editor into another program.
(*LibreOffice* was used in this example, but any other editor will work as well.)

![](images/non-generated/term-checklist-in-external-editor.png)

From *LibreOffice*, save the document and move the program over to the side of the screen. Next, go back to the project in *Readability Studio*.
From the *Home* tab on the ribbon, click the `r keys('Properties')` button. On the *Project Properties* dialog, select *Project Settings* on the sidebar.
Then, under *Linking and embedding*, select *Reload the document when opening project*.

Because we created this project with entered text, it is not linked to a document.
Under *Linking and embedding* is a text box where you enter a document path. Click the button next to this box and select the file that you just saved from *LibreOffice*.
Also, check *Real-time update*, which will be discussed later.

```{r echo=F, fig.align='center', out.width='75%'}
knitr::include_graphics("images/realtime-options.png")
```

Click `r keys('OK')` to accept these changes.

The project will link to the external document and analyze that, rather than the embedded text that we were editing before.
Also, because we selected *Real-time update*, the project will reanalyze the document as we edit it in *LibreOffice*.
The program will check every few seconds to see if the document's modified time has changed; if it has, then the project will reload.

::: {.notesection data-latex=""}
You will need to save from your external editor before *Readability Studio* can detect any changes.
:::

By placing the two programs side-by-side, you can review any issues while you edit.

::: {layout-ncol=2}
![](images/termchecklistgrammar.png)

![](images/non-generated/term-checklist-in-external-editor.png)
:::

The real-time update option is also available on the ribbon and can be toggled at any time:

![](images/termchecklist-realtime.png)

If this option is unpressed, then the project will only update when you explicitly click the `r keys('Reload')` button.

Once you are finished editing, you can close the other program and continue reviewing the results in *Readability Studio*.

::: {.tipsection data-latex=""}
To reopen the document in your default editor, click `r keys('Edit Document')` from the ribbon's **Document** tab.\index{editing!from other programs|)}
:::
